# coding: utf-8

"""
    Formlabs Developer API

    The Formlabs Dashboard Developer API provides resources to integrate Formlabs products into customerâ€™s workflow and existing systems

    The version of the OpenAPI document: 0.1.0
    Contact: api-inquiry@formlabs.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from formlabs_web_api.models.developer_apimy_printer import DeveloperAPIMyPrinter

class TestDeveloperAPIMyPrinter(unittest.TestCase):
    """DeveloperAPIMyPrinter unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> DeveloperAPIMyPrinter:
        """Test DeveloperAPIMyPrinter
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `DeveloperAPIMyPrinter`
        """
        model = DeveloperAPIMyPrinter()
        if include_optional:
            return DeveloperAPIMyPrinter(
                serial = '',
                machine_type_id = 'FORM-1-0',
                total_print_time_ms = 56,
                total_number_of_prints = None,
                printer_status = formlabs_web_api.models.my_deep_printer_status.MyDeepPrinterStatus(
                    status = '', 
                    last_pinged_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    hopper_level = -2147483648, 
                    material_credit = 1.337, 
                    hopper_material = '', 
                    last_modified = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    current_temperature = 1.337, 
                    current_print_run = null, 
                    form_cell = null, 
                    last_printer_cooldown_started = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    outer_boundary_offset_corrections = null, 
                    build_platform_contents = 'BUILD_PLATFORM_CONTENTS_NOT_SUPPORTED', 
                    tank_mixer_state = 'TANK_MIXER_STATE_NOT_SUPPORTED', 
                    ready_to_print = 'READY_TO_PRINT_NOT_SUPPORTED', 
                    printer_capabilities = [
                        ''
                        ], 
                    printernet_capabilities = [
                        ''
                        ], 
                    camera_status = 'UNKNOWN', ),
                cartridge_status = formlabs_web_api.models.printer_cartridge_status.PrinterCartridgeStatus(
                    cartridge = null, 
                    last_modified = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    cartridge_slot = null, ),
                tank_status = formlabs_web_api.models.printer_tank_status.PrinterTankStatus(
                    tank = null, 
                    last_modified = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), ),
                group = formlabs_web_api.models.printer_group.PrinterGroup(
                    id = '', 
                    name = '', ),
                previous_print_run = {
                    'key' : null
                    },
                firmware_version = '',
                location = ''
            )
        else:
            return DeveloperAPIMyPrinter(
                serial = '',
                machine_type_id = 'FORM-1-0',
                total_print_time_ms = 56,
                total_number_of_prints = None,
                printer_status = formlabs_web_api.models.my_deep_printer_status.MyDeepPrinterStatus(
                    status = '', 
                    last_pinged_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    hopper_level = -2147483648, 
                    material_credit = 1.337, 
                    hopper_material = '', 
                    last_modified = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    current_temperature = 1.337, 
                    current_print_run = null, 
                    form_cell = null, 
                    last_printer_cooldown_started = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    outer_boundary_offset_corrections = null, 
                    build_platform_contents = 'BUILD_PLATFORM_CONTENTS_NOT_SUPPORTED', 
                    tank_mixer_state = 'TANK_MIXER_STATE_NOT_SUPPORTED', 
                    ready_to_print = 'READY_TO_PRINT_NOT_SUPPORTED', 
                    printer_capabilities = [
                        ''
                        ], 
                    printernet_capabilities = [
                        ''
                        ], 
                    camera_status = 'UNKNOWN', ),
                cartridge_status = formlabs_web_api.models.printer_cartridge_status.PrinterCartridgeStatus(
                    cartridge = null, 
                    last_modified = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    cartridge_slot = null, ),
                tank_status = formlabs_web_api.models.printer_tank_status.PrinterTankStatus(
                    tank = null, 
                    last_modified = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), ),
                group = formlabs_web_api.models.printer_group.PrinterGroup(
                    id = '', 
                    name = '', ),
                previous_print_run = {
                    'key' : null
                    },
                firmware_version = '',
                location = '',
        )
        """

    def testDeveloperAPIMyPrinter(self):
        """Test DeveloperAPIMyPrinter"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
