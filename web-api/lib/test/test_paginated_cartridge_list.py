# coding: utf-8

"""
    Formlabs Developer API

    The Formlabs Dashboard Developer API provides resources to integrate Formlabs products into customerâ€™s workflow and existing systems

    The version of the OpenAPI document: 0.1.0
    Contact: api-inquiry@formlabs.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from formlabs_web_api.models.paginated_cartridge_list import PaginatedCartridgeList

class TestPaginatedCartridgeList(unittest.TestCase):
    """PaginatedCartridgeList unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> PaginatedCartridgeList:
        """Test PaginatedCartridgeList
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `PaginatedCartridgeList`
        """
        model = PaginatedCartridgeList()
        if include_optional:
            return PaginatedCartridgeList(
                count = 123,
                next = 'http://api.example.org/accounts/?page=4',
                previous = 'http://api.example.org/accounts/?page=2',
                results = [
                    formlabs_web_api.models.cartridge.Cartridge(
                        serial = '', 
                        machine_type_id = null, 
                        material = '', 
                        initial_volume_ml = 1.337, 
                        volume_dispensed_ml = 1.337, 
                        dispense_count = -2147483648, 
                        write_count = -2147483648, 
                        mechanical_version = '', 
                        manufacture_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        manufacturer = '', 
                        display_name = '', 
                        lot_number = '', 
                        last_modified = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        is_empty = True, 
                        inside_printer = '', 
                        connected_group = '', 
                        created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        last_print_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), )
                    ]
            )
        else:
            return PaginatedCartridgeList(
        )
        """

    def testPaginatedCartridgeList(self):
        """Test PaginatedCartridgeList"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
