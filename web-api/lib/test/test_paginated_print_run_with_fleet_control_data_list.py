# coding: utf-8

"""
    Formlabs Developer API

    The Formlabs Dashboard Developer API provides resources to integrate Formlabs products into customerâ€™s workflow and existing systems

    The version of the OpenAPI document: 0.1.0
    Contact: api-inquiry@formlabs.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from formlabs_web_api.models.paginated_print_run_with_fleet_control_data_list import PaginatedPrintRunWithFleetControlDataList

class TestPaginatedPrintRunWithFleetControlDataList(unittest.TestCase):
    """PaginatedPrintRunWithFleetControlDataList unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> PaginatedPrintRunWithFleetControlDataList:
        """Test PaginatedPrintRunWithFleetControlDataList
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `PaginatedPrintRunWithFleetControlDataList`
        """
        model = PaginatedPrintRunWithFleetControlDataList()
        if include_optional:
            return PaginatedPrintRunWithFleetControlDataList(
                count = 123,
                next = 'http://api.example.org/accounts/?page=4',
                previous = 'http://api.example.org/accounts/?page=2',
                results = [
                    formlabs_web_api.models.print_run_with_fleet_control_data.PrintRunWithFleetControlData(
                        guid = '', 
                        name = '', 
                        printer = '', 
                        status = null, 
                        using_open_mode = True, 
                        z_height_offset_mm = 1.337, 
                        print_started_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        print_finished_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        layer_count = 56, 
                        volume_ml = 1.337, 
                        material = '', 
                        layer_thickness_mm = 1.337, 
                        currently_printing_layer = 56, 
                        estimated_duration_ms = 56, 
                        elapsed_duration_ms = 56, 
                        estimated_time_remaining_ms = 56, 
                        created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        print_run_success = null, 
                        feedback = null, 
                        firmware_version = '', 
                        cartridge = '', 
                        front_cartridge = '', 
                        back_cartridge = '', 
                        tank = '', 
                        cylinder = '', 
                        note = null, 
                        print_thumbnail = null, 
                        post_print_photo_url = '', 
                        user = null, 
                        user_custom_label = '', 
                        group = null, 
                        adaptive_thickness = True, 
                        probably_finished = True, 
                        message = '', 
                        print_job = '', 
                        material_name = '', 
                        print_settings_name = '', 
                        print_settings_code = '', 
                        cloud_queue_item = {
                            'key' : null
                            }, 
                        form_auto_serial = '', 
                        form_auto_fw_version = '', 
                        harvest_status = 'FORM_CELL_HARVEST_UNKNOWN', 
                        parts = [
                            formlabs_web_api.models.print_part.PrintPart(
                                id = 56, 
                                guid = '', 
                                display_name = '', 
                                end_layer = -2147483648, 
                                name = '', 
                                raw_mesh_hash = '', 
                                start_layer = -2147483648, 
                                volume_ml = 1.337, 
                                prepared_scene = '', )
                            ], )
                    ]
            )
        else:
            return PaginatedPrintRunWithFleetControlDataList(
        )
        """

    def testPaginatedPrintRunWithFleetControlDataList(self):
        """Test PaginatedPrintRunWithFleetControlDataList"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
