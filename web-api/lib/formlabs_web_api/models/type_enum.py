# coding: utf-8

"""
    Formlabs Developer API

    The Formlabs Dashboard Developer API provides resources to integrate Formlabs products into customerâ€™s workflow and existing systems

    The version of the OpenAPI document: 0.1.0
    Contact: api-inquiry@formlabs.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


from __future__ import annotations
import json
from enum import Enum
from typing_extensions import Self


class TypeEnum(str, Enum):
    """
    * `RESIN_LOW` - Resin Low * `PRINT_START` - Print Started * `PRINT_FINISHED` - Print finished * `PRINT_ABORTED` - Print aborted * `PRINT_ERROR` - Print error * `PRINT_PAUSED` - Print Paused * `PRINT_RESUMED` - Print Resumed * `PRINT_RESOLUTION_REQUEST` - Print Resolution Request * `PRINT_RESOLUTION` - Print Resolution * `MANY_PRINT_ERRORS` - Print Resolution * `PRINTER_REGISTERED` - Printer Registered * `PRINTER_DEREGISTERED` - Printer Deregistered * `PRINTING_REPORT` - Printing Report * `GROUP_INVITATION` - Group Invitation * `AUTO_ADD_USER_TO_GROUP` - Auto-add User to Group * `USER_REMOVED_FROM_GROUP` - Removed User from Group * `YEAR_IN_REVIEW_EMAIL` - Year In Review Email * `REMOTE_JOB_EXPIRED` - Remote Job Expired * `PRINT_NOTIFICATION` - Print Notification * `FUSE_EMAIL_VOTING` - Fuse Email Voting
    """

    """
    allowed enum values
    """
    RESIN_LOW = 'RESIN_LOW'
    PRINT_START = 'PRINT_START'
    PRINT_FINISHED = 'PRINT_FINISHED'
    PRINT_ABORTED = 'PRINT_ABORTED'
    PRINT_ERROR = 'PRINT_ERROR'
    PRINT_PAUSED = 'PRINT_PAUSED'
    PRINT_RESUMED = 'PRINT_RESUMED'
    PRINT_RESOLUTION_REQUEST = 'PRINT_RESOLUTION_REQUEST'
    PRINT_RESOLUTION = 'PRINT_RESOLUTION'
    MANY_PRINT_ERRORS = 'MANY_PRINT_ERRORS'
    PRINTER_REGISTERED = 'PRINTER_REGISTERED'
    PRINTER_DEREGISTERED = 'PRINTER_DEREGISTERED'
    PRINTING_REPORT = 'PRINTING_REPORT'
    GROUP_INVITATION = 'GROUP_INVITATION'
    AUTO_ADD_USER_TO_GROUP = 'AUTO_ADD_USER_TO_GROUP'
    USER_REMOVED_FROM_GROUP = 'USER_REMOVED_FROM_GROUP'
    YEAR_IN_REVIEW_EMAIL = 'YEAR_IN_REVIEW_EMAIL'
    REMOTE_JOB_EXPIRED = 'REMOTE_JOB_EXPIRED'
    PRINT_NOTIFICATION = 'PRINT_NOTIFICATION'
    FUSE_EMAIL_VOTING = 'FUSE_EMAIL_VOTING'

    @classmethod
    def from_json(cls, json_str: str) -> Self:
        """Create an instance of TypeEnum from a JSON string"""
        return cls(json.loads(json_str))


